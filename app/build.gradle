apply plugin: 'com.android.application'

apply plugin: 'kotlin-android'

apply plugin: 'kotlin-android-extensions'

apply plugin: 'com.google.firebase.crashlytics'

apply plugin: 'kotlin-kapt'

def appPropertiesFile = rootProject.file("app-settings.properties")
def appProperties = new Properties()
appProperties.load(new FileInputStream(appPropertiesFile))

def useTestKeyStore = appProperties["env.use.test.keystore"]
def appModeProd = appProperties["env.use.mode.production"]
def keystoreProperties
println("useKeystoreFile = $useTestKeyStore")
if (useTestKeyStore == "true") {
    //println("setting keystorefile")
    def keystorePropertiesFile = rootProject.file("keystore.properties")
    keystoreProperties = new Properties()
    keystoreProperties.load(new FileInputStream(keystorePropertiesFile))
}



android {
    compileSdkVersion 30
    signingConfigs {
        if (useTestKeyStore == "true") {
            //println("Setting storm release")
            storm_release {
                keyAlias keystoreProperties['keyAlias']
                keyPassword keystoreProperties['keyPassword']
                storeFile file(keystoreProperties['storeFile'])
                storePassword keystoreProperties['storePassword']
            }
        }
    }
    defaultConfig {
        applicationId "com.bsystems"
        minSdkVersion 19
        targetSdkVersion 30
        versionCode 90
        versionName "1.6.90"
        multiDexEnabled true
        vectorDrawables.useSupportLibrary = true
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        def environmentPath
        if (appModeProd == "true")
            environmentPath = appProperties["env.path.production"]
        else
            environmentPath = appProperties["env.path.staging"]
        buildConfigField "Boolean", "APPMODE_PROD", appModeProd
        def envPropertiesFile = rootProject.file(environmentPath)
        def envProperties = new Properties()
        envProperties.load(new FileInputStream(envPropertiesFile))
        for (String key : envProperties.keySet()) {
            buildConfigField "String", key.replaceAll("\\.", "_").toUpperCase(), envProperties[key]
        }

    }
    buildTypes {
        release {
            if (useTestKeyStore == "true"){
                //println("setting signing config")
                signingConfig signingConfigs.storm_release
            }
            debuggable false
            minifyEnabled false
            shrinkResources false
            //matchingFallbacks = ['release']
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
        /*release {
            // blah blah
            matchingFallbacks = ['release']
        }*/
        /*debug {
            // blah blah
            matchingFallbacks = ['debug']
        }*/
    }

    dataBinding {
        enabled = true
    }
    buildFeatures{
        dataBinding true
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    /*configurations.all {
        // check for updates every build
        resolutionStrategy.cacheChangingModulesFor 0, 'seconds'
    }*/
    android.applicationVariants.all { variant ->
        variant.outputs.all {
            def appName = "Storm"
            outputFileName = appName + "-${variant.versionName}.apk"
        }
    }
}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlin_version"
    implementation 'androidx.appcompat:appcompat:1.2.0'
    implementation 'androidx.core:core-ktx:1.3.2'
    implementation 'com.google.android.material:material:1.2.1'
    implementation 'androidx.constraintlayout:constraintlayout:2.0.4'
    implementation 'com.google.code.gson:gson:2.8.6'

    // Room
    implementation "androidx.room:room-runtime:$rootProject.roomVersion"
    annotationProcessor "androidx.room:room-compiler:$rootProject.roomVersion"
    kapt "androidx.room:room-compiler:$rootProject.roomVersion"
    androidTestImplementation "androidx.room:room-testing:$rootProject.roomVersion"
    implementation "androidx.room:room-rxjava2:$rootProject.roomVersion"


    implementation "androidx.paging:paging-runtime:$rootProject.pagingVersion"

    //Lifecycle
    implementation "androidx.lifecycle:lifecycle-extensions:$rootProject.archLifecycleVersion"
    implementation "androidx.lifecycle:lifecycle-common-java8:$rootProject.archLifecycleVersion"

    implementation 'com.wang.avi:library:2.1.3'
    implementation 'joda-time:joda-time:2.10.2'

    implementation 'com.squareup.retrofit2:converter-scalars:2.6.1'
    implementation 'com.squareup.retrofit2:retrofit:2.9.0'
    implementation 'com.squareup.retrofit2:converter-gson:2.9.0'
    implementation 'com.squareup.okhttp3:okhttp:3.14.9'
    implementation 'com.squareup.okhttp3:logging-interceptor:3.9.1'

    implementation 'us.belka:androidtoggleswitch:1.2.2'

    implementation('com.squareup.retrofit2:converter-simplexml:2.1.0') {
        exclude group: 'stax', module: 'stax-api'
        exclude group: 'stax', module: 'stax'
        exclude group: 'xpp3', module: 'xpp3'
    }

    implementation group: 'com.googlecode.json-simple', name: 'json-simple', version: '1.1'
    implementation 'com.squareup.retrofit2:adapter-rxjava2:2.9.0'
    implementation 'io.reactivex.rxjava2:rxandroid:2.1.1'
    implementation 'io.reactivex.rxjava2:rxjava:2.2.19'
    implementation 'com.jakewharton.rxbinding3:rxbinding-core:3.0.0-alpha2'
    implementation platform('com.google.firebase:firebase-bom:26.0.0')
    implementation 'com.google.firebase:firebase-analytics'
    implementation 'com.google.firebase:firebase-crashlytics'
    implementation 'com.google.firebase:firebase-iid'
    implementation 'com.google.firebase:firebase-dynamic-links'
    implementation 'com.google.firebase:firebase-messaging'//17.3.4
    implementation 'commons-lang:commons-lang:2.6'


    implementation 'com.android.support:multidex:1.0.3'
    //implementation 'com.crashlytics.sdk.android:crashlytics:2.10.1'
    implementation 'com.google.android.gms:play-services-vision:20.1.2'//18.0.0,16.2.0
    implementation 'com.toptoche.searchablespinner:searchablespinnerlibrary:1.3.1'
    implementation 'com.theartofdev.edmodo:android-image-cropper:2.8.+'
    implementation 'com.google.zxing:core:3.3.3'
    implementation 'com.wang.avi:library:2.1.3'
    implementation 'com.orhanobut:logger:2.2.0'
    implementation 'com.auth0:java-jwt:3.10.0'
    implementation 'com.hbb20:ccp:2.5.1'
    implementation 'com.juanpabloprado:countrypicker:1.2.0'


    implementation("com.smartpesa:sdk:3.2.8") {
        transitive = true
        exclude group: 'com.google.android.gms'
    }
    implementation 'com.google.android.gms:play-services-gcm:17.0.0'

    implementation group: 'commons-io', name: 'commons-io', version: '2.6'

    implementation 'com.github.bumptech.glide:glide:4.11.0'
    annotationProcessor 'com.github.bumptech.glide:compiler:4.11.0'
    implementation('com.github.piasy:BigImageViewer:1.5.7')

    //netpos sdk
    implementation project(':netpossdk')

    implementation "com.google.dagger:dagger-android-support:2.12"
    annotationProcessor "com.google.dagger:dagger-compiler:2.12"
    implementation 'com.itextpdf:itextg:5.5.10'
    testImplementation 'junit:junit:4.13.1'
    androidTestImplementation 'androidx.test:runner:1.3.0'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.3.0'

    implementation 'com.auth0.android:jwtdecode:1.4.0'

    //Debug Database
    debugImplementation 'com.amitshekhar.android:debug-db:1.0.6'
    //Parcler
    implementation 'org.parceler:parceler-api:1.1.12'
    annotationProcessor 'org.parceler:parceler:1.1.12'
    kapt 'org.parceler:parceler:1.1.12'

    //file compressor
    implementation 'id.zelory:compressor:2.1.0'

    implementation 'com.pixplicity.easyprefs:library:1.9.0'

    //timber
    implementation 'com.jakewharton.timber:timber:4.7.1'
}
//com.google.gms.googleservices.GoogleServicesPlugin.config.disableVersionCheck = true
apply plugin: 'com.google.gms.google-services'
//googleServices { disableVersionCheck = false }
//com.google.gms.googleservices.GoogleServicesPlugin.config.disableVersionCheck = true
