// Generated by data binding compiler. Do not edit!
package com.woleapp.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.EditText;
import android.widget.LinearLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.appcompat.widget.AppCompatSpinner;
import androidx.databinding.Bindable;
import androidx.databinding.DataBindingUtil;
import androidx.databinding.ViewDataBinding;
import androidx.recyclerview.widget.RecyclerView;
import com.wang.avi.AVLoadingIndicatorView;
import com.woleapp.R;
import java.lang.Deprecated;
import java.lang.Object;

public abstract class LayoutTransactionListBinding extends ViewDataBinding {
  @NonNull
  public final AVLoadingIndicatorView avloadingIndicatorView;

  @NonNull
  public final AppCompatSpinner channelSpinner;

  @NonNull
  public final EditText etSearch;

  @NonNull
  public final LinearLayout linearHeader;

  @NonNull
  public final RecyclerView rvInventories;

  @NonNull
  public final AppCompatSpinner searchBySpinner;

  @NonNull
  public final LinearLayout tableHeader;

  @NonNull
  public final TextView tvNoResults;

  @NonNull
  public final TextView tvTitle;

  @Bindable
  protected Boolean mIsLoading;

  protected LayoutTransactionListBinding(Object _bindingComponent, View _root, int _localFieldCount,
      AVLoadingIndicatorView avloadingIndicatorView, AppCompatSpinner channelSpinner,
      EditText etSearch, LinearLayout linearHeader, RecyclerView rvInventories,
      AppCompatSpinner searchBySpinner, LinearLayout tableHeader, TextView tvNoResults,
      TextView tvTitle) {
    super(_bindingComponent, _root, _localFieldCount);
    this.avloadingIndicatorView = avloadingIndicatorView;
    this.channelSpinner = channelSpinner;
    this.etSearch = etSearch;
    this.linearHeader = linearHeader;
    this.rvInventories = rvInventories;
    this.searchBySpinner = searchBySpinner;
    this.tableHeader = tableHeader;
    this.tvNoResults = tvNoResults;
    this.tvTitle = tvTitle;
  }

  public abstract void setIsLoading(@Nullable Boolean isLoading);

  @Nullable
  public Boolean getIsLoading() {
    return mIsLoading;
  }

  @NonNull
  public static LayoutTransactionListBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup root, boolean attachToRoot) {
    return inflate(inflater, root, attachToRoot, DataBindingUtil.getDefaultComponent());
  }

  /**
   * This method receives DataBindingComponent instance as type Object instead of
   * type DataBindingComponent to avoid causing too many compilation errors if
   * compilation fails for another reason.
   * https://issuetracker.google.com/issues/116541301
   * @Deprecated Use DataBindingUtil.inflate(inflater, R.layout.layout_transaction_list, root, attachToRoot, component)
   */
  @NonNull
  @Deprecated
  public static LayoutTransactionListBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup root, boolean attachToRoot, @Nullable Object component) {
    return ViewDataBinding.<LayoutTransactionListBinding>inflateInternal(inflater, R.layout.layout_transaction_list, root, attachToRoot, component);
  }

  @NonNull
  public static LayoutTransactionListBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, DataBindingUtil.getDefaultComponent());
  }

  /**
   * This method receives DataBindingComponent instance as type Object instead of
   * type DataBindingComponent to avoid causing too many compilation errors if
   * compilation fails for another reason.
   * https://issuetracker.google.com/issues/116541301
   * @Deprecated Use DataBindingUtil.inflate(inflater, R.layout.layout_transaction_list, null, false, component)
   */
  @NonNull
  @Deprecated
  public static LayoutTransactionListBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable Object component) {
    return ViewDataBinding.<LayoutTransactionListBinding>inflateInternal(inflater, R.layout.layout_transaction_list, null, false, component);
  }

  public static LayoutTransactionListBinding bind(@NonNull View view) {
    return bind(view, DataBindingUtil.getDefaultComponent());
  }

  /**
   * This method receives DataBindingComponent instance as type Object instead of
   * type DataBindingComponent to avoid causing too many compilation errors if
   * compilation fails for another reason.
   * https://issuetracker.google.com/issues/116541301
   * @Deprecated Use DataBindingUtil.bind(view, component)
   */
  @Deprecated
  public static LayoutTransactionListBinding bind(@NonNull View view, @Nullable Object component) {
    return (LayoutTransactionListBinding)bind(component, view, R.layout.layout_transaction_list);
  }
}
