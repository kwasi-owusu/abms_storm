// Generated by data binding compiler. Do not edit!
package com.woleapp.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.EditText;
import android.widget.LinearLayout;
import android.widget.ProgressBar;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.databinding.Bindable;
import androidx.databinding.DataBindingUtil;
import androidx.databinding.ViewDataBinding;
import androidx.recyclerview.widget.RecyclerView;
import androidx.swiperefreshlayout.widget.SwipeRefreshLayout;
import com.woleapp.R;
import com.woleapp.viewmodels.TransactionsViewModel;
import java.lang.Deprecated;
import java.lang.Object;

public abstract class LayoutInventoryListBinding extends ViewDataBinding {
  @NonNull
  public final EditText etSearch;

  @NonNull
  public final LinearLayout linearHeader;

  @NonNull
  public final ProgressBar loadingProgress;

  @NonNull
  public final RecyclerView rvInventories;

  @NonNull
  public final SwipeRefreshLayout swipeRefresh;

  @NonNull
  public final TextView tvNoResults;

  @NonNull
  public final TextView tvTitle;

  @Bindable
  protected TransactionsViewModel mTransactionsViewModel;

  @Bindable
  protected Boolean mIsLoading;

  protected LayoutInventoryListBinding(Object _bindingComponent, View _root, int _localFieldCount,
      EditText etSearch, LinearLayout linearHeader, ProgressBar loadingProgress,
      RecyclerView rvInventories, SwipeRefreshLayout swipeRefresh, TextView tvNoResults,
      TextView tvTitle) {
    super(_bindingComponent, _root, _localFieldCount);
    this.etSearch = etSearch;
    this.linearHeader = linearHeader;
    this.loadingProgress = loadingProgress;
    this.rvInventories = rvInventories;
    this.swipeRefresh = swipeRefresh;
    this.tvNoResults = tvNoResults;
    this.tvTitle = tvTitle;
  }

  public abstract void setTransactionsViewModel(
      @Nullable TransactionsViewModel transactionsViewModel);

  @Nullable
  public TransactionsViewModel getTransactionsViewModel() {
    return mTransactionsViewModel;
  }

  public abstract void setIsLoading(@Nullable Boolean isLoading);

  @Nullable
  public Boolean getIsLoading() {
    return mIsLoading;
  }

  @NonNull
  public static LayoutInventoryListBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup root, boolean attachToRoot) {
    return inflate(inflater, root, attachToRoot, DataBindingUtil.getDefaultComponent());
  }

  /**
   * This method receives DataBindingComponent instance as type Object instead of
   * type DataBindingComponent to avoid causing too many compilation errors if
   * compilation fails for another reason.
   * https://issuetracker.google.com/issues/116541301
   * @Deprecated Use DataBindingUtil.inflate(inflater, R.layout.layout_inventory_list, root, attachToRoot, component)
   */
  @NonNull
  @Deprecated
  public static LayoutInventoryListBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup root, boolean attachToRoot, @Nullable Object component) {
    return ViewDataBinding.<LayoutInventoryListBinding>inflateInternal(inflater, R.layout.layout_inventory_list, root, attachToRoot, component);
  }

  @NonNull
  public static LayoutInventoryListBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, DataBindingUtil.getDefaultComponent());
  }

  /**
   * This method receives DataBindingComponent instance as type Object instead of
   * type DataBindingComponent to avoid causing too many compilation errors if
   * compilation fails for another reason.
   * https://issuetracker.google.com/issues/116541301
   * @Deprecated Use DataBindingUtil.inflate(inflater, R.layout.layout_inventory_list, null, false, component)
   */
  @NonNull
  @Deprecated
  public static LayoutInventoryListBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable Object component) {
    return ViewDataBinding.<LayoutInventoryListBinding>inflateInternal(inflater, R.layout.layout_inventory_list, null, false, component);
  }

  public static LayoutInventoryListBinding bind(@NonNull View view) {
    return bind(view, DataBindingUtil.getDefaultComponent());
  }

  /**
   * This method receives DataBindingComponent instance as type Object instead of
   * type DataBindingComponent to avoid causing too many compilation errors if
   * compilation fails for another reason.
   * https://issuetracker.google.com/issues/116541301
   * @Deprecated Use DataBindingUtil.bind(view, component)
   */
  @Deprecated
  public static LayoutInventoryListBinding bind(@NonNull View view, @Nullable Object component) {
    return (LayoutInventoryListBinding)bind(component, view, R.layout.layout_inventory_list);
  }
}
