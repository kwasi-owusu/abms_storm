// Generated by data binding compiler. Do not edit!
package com.woleapp.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.EditText;
import android.widget.LinearLayout;
import android.widget.Spinner;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.databinding.Bindable;
import androidx.databinding.DataBindingUtil;
import androidx.databinding.ViewDataBinding;
import com.woleapp.R;
import com.woleapp.viewmodels.UtilitiesViewModel;
import java.lang.Deprecated;
import java.lang.Object;

public abstract class LayoutInternetSubscriptionBinding extends ViewDataBinding {
  @NonNull
  public final EditText confirmMobileNumber;

  @NonNull
  public final EditText enterMobileNumber;

  @NonNull
  public final TextView header;

  @NonNull
  public final Spinner packageSpinner;

  @NonNull
  public final LinearLayout priceInputLayout;

  @NonNull
  public final EditText priceTextbox;

  @NonNull
  public final Spinner providerSpinner;

  @Bindable
  protected UtilitiesViewModel mViewmodel;

  protected LayoutInternetSubscriptionBinding(Object _bindingComponent, View _root,
      int _localFieldCount, EditText confirmMobileNumber, EditText enterMobileNumber,
      TextView header, Spinner packageSpinner, LinearLayout priceInputLayout, EditText priceTextbox,
      Spinner providerSpinner) {
    super(_bindingComponent, _root, _localFieldCount);
    this.confirmMobileNumber = confirmMobileNumber;
    this.enterMobileNumber = enterMobileNumber;
    this.header = header;
    this.packageSpinner = packageSpinner;
    this.priceInputLayout = priceInputLayout;
    this.priceTextbox = priceTextbox;
    this.providerSpinner = providerSpinner;
  }

  public abstract void setViewmodel(@Nullable UtilitiesViewModel viewmodel);

  @Nullable
  public UtilitiesViewModel getViewmodel() {
    return mViewmodel;
  }

  @NonNull
  public static LayoutInternetSubscriptionBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup root, boolean attachToRoot) {
    return inflate(inflater, root, attachToRoot, DataBindingUtil.getDefaultComponent());
  }

  /**
   * This method receives DataBindingComponent instance as type Object instead of
   * type DataBindingComponent to avoid causing too many compilation errors if
   * compilation fails for another reason.
   * https://issuetracker.google.com/issues/116541301
   * @Deprecated Use DataBindingUtil.inflate(inflater, R.layout.layout_internet_subscription, root, attachToRoot, component)
   */
  @NonNull
  @Deprecated
  public static LayoutInternetSubscriptionBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup root, boolean attachToRoot, @Nullable Object component) {
    return ViewDataBinding.<LayoutInternetSubscriptionBinding>inflateInternal(inflater, R.layout.layout_internet_subscription, root, attachToRoot, component);
  }

  @NonNull
  public static LayoutInternetSubscriptionBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, DataBindingUtil.getDefaultComponent());
  }

  /**
   * This method receives DataBindingComponent instance as type Object instead of
   * type DataBindingComponent to avoid causing too many compilation errors if
   * compilation fails for another reason.
   * https://issuetracker.google.com/issues/116541301
   * @Deprecated Use DataBindingUtil.inflate(inflater, R.layout.layout_internet_subscription, null, false, component)
   */
  @NonNull
  @Deprecated
  public static LayoutInternetSubscriptionBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable Object component) {
    return ViewDataBinding.<LayoutInternetSubscriptionBinding>inflateInternal(inflater, R.layout.layout_internet_subscription, null, false, component);
  }

  public static LayoutInternetSubscriptionBinding bind(@NonNull View view) {
    return bind(view, DataBindingUtil.getDefaultComponent());
  }

  /**
   * This method receives DataBindingComponent instance as type Object instead of
   * type DataBindingComponent to avoid causing too many compilation errors if
   * compilation fails for another reason.
   * https://issuetracker.google.com/issues/116541301
   * @Deprecated Use DataBindingUtil.bind(view, component)
   */
  @Deprecated
  public static LayoutInternetSubscriptionBinding bind(@NonNull View view,
      @Nullable Object component) {
    return (LayoutInternetSubscriptionBinding)bind(component, view, R.layout.layout_internet_subscription);
  }
}
