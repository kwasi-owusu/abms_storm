// Generated by data binding compiler. Do not edit!
package com.woleapp.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ImageView;
import android.widget.LinearLayout;
import android.widget.ScrollView;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.cardview.widget.CardView;
import androidx.databinding.DataBindingUtil;
import androidx.databinding.ViewDataBinding;
import com.woleapp.R;
import java.lang.Deprecated;
import java.lang.Object;

public abstract class LayoutSanlamPolicyBinding extends ViewDataBinding {
  @NonNull
  public final CardView cardItem;

  @NonNull
  public final CardView cardItem1;

  @NonNull
  public final LinearLayout contents;

  @NonNull
  public final ImageView ivService;

  @NonNull
  public final ImageView ivServiceMomo;

  @NonNull
  public final ScrollView scrollView;

  @NonNull
  public final TextView textTo;

  @NonNull
  public final TextView tvTitle;

  @NonNull
  public final TextView tvTitleMomo;

  protected LayoutSanlamPolicyBinding(Object _bindingComponent, View _root, int _localFieldCount,
      CardView cardItem, CardView cardItem1, LinearLayout contents, ImageView ivService,
      ImageView ivServiceMomo, ScrollView scrollView, TextView textTo, TextView tvTitle,
      TextView tvTitleMomo) {
    super(_bindingComponent, _root, _localFieldCount);
    this.cardItem = cardItem;
    this.cardItem1 = cardItem1;
    this.contents = contents;
    this.ivService = ivService;
    this.ivServiceMomo = ivServiceMomo;
    this.scrollView = scrollView;
    this.textTo = textTo;
    this.tvTitle = tvTitle;
    this.tvTitleMomo = tvTitleMomo;
  }

  @NonNull
  public static LayoutSanlamPolicyBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup root, boolean attachToRoot) {
    return inflate(inflater, root, attachToRoot, DataBindingUtil.getDefaultComponent());
  }

  /**
   * This method receives DataBindingComponent instance as type Object instead of
   * type DataBindingComponent to avoid causing too many compilation errors if
   * compilation fails for another reason.
   * https://issuetracker.google.com/issues/116541301
   * @Deprecated Use DataBindingUtil.inflate(inflater, R.layout.layout_sanlam_policy, root, attachToRoot, component)
   */
  @NonNull
  @Deprecated
  public static LayoutSanlamPolicyBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup root, boolean attachToRoot, @Nullable Object component) {
    return ViewDataBinding.<LayoutSanlamPolicyBinding>inflateInternal(inflater, R.layout.layout_sanlam_policy, root, attachToRoot, component);
  }

  @NonNull
  public static LayoutSanlamPolicyBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, DataBindingUtil.getDefaultComponent());
  }

  /**
   * This method receives DataBindingComponent instance as type Object instead of
   * type DataBindingComponent to avoid causing too many compilation errors if
   * compilation fails for another reason.
   * https://issuetracker.google.com/issues/116541301
   * @Deprecated Use DataBindingUtil.inflate(inflater, R.layout.layout_sanlam_policy, null, false, component)
   */
  @NonNull
  @Deprecated
  public static LayoutSanlamPolicyBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable Object component) {
    return ViewDataBinding.<LayoutSanlamPolicyBinding>inflateInternal(inflater, R.layout.layout_sanlam_policy, null, false, component);
  }

  public static LayoutSanlamPolicyBinding bind(@NonNull View view) {
    return bind(view, DataBindingUtil.getDefaultComponent());
  }

  /**
   * This method receives DataBindingComponent instance as type Object instead of
   * type DataBindingComponent to avoid causing too many compilation errors if
   * compilation fails for another reason.
   * https://issuetracker.google.com/issues/116541301
   * @Deprecated Use DataBindingUtil.bind(view, component)
   */
  @Deprecated
  public static LayoutSanlamPolicyBinding bind(@NonNull View view, @Nullable Object component) {
    return (LayoutSanlamPolicyBinding)bind(component, view, R.layout.layout_sanlam_policy);
  }
}
