// Generated by data binding compiler. Do not edit!
package com.woleapp.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.ImageView;
import android.widget.RelativeLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.cardview.widget.CardView;
import androidx.databinding.Bindable;
import androidx.databinding.DataBindingUtil;
import androidx.databinding.ViewDataBinding;
import com.woleapp.R;
import com.woleapp.model.Inventory;
import java.lang.Deprecated;
import java.lang.Object;

public abstract class LayoutItemListTransactionBinding extends ViewDataBinding {
  @NonNull
  public final TextView btnDetails;

  @NonNull
  public final Button btnSell;

  @NonNull
  public final CardView cardCalendar;

  @NonNull
  public final ImageView ivProduct;

  @NonNull
  public final RelativeLayout relativeDetails;

  @NonNull
  public final TextView tvCategory;

  @NonNull
  public final TextView tvDate;

  @NonNull
  public final TextView tvMonth;

  @NonNull
  public final TextView tvName;

  @NonNull
  public final TextView tvQuantity;

  @NonNull
  public final TextView tvYear;

  @Bindable
  protected Inventory mInventory;

  @Bindable
  protected Boolean mIsOpen;

  protected LayoutItemListTransactionBinding(Object _bindingComponent, View _root,
      int _localFieldCount, TextView btnDetails, Button btnSell, CardView cardCalendar,
      ImageView ivProduct, RelativeLayout relativeDetails, TextView tvCategory, TextView tvDate,
      TextView tvMonth, TextView tvName, TextView tvQuantity, TextView tvYear) {
    super(_bindingComponent, _root, _localFieldCount);
    this.btnDetails = btnDetails;
    this.btnSell = btnSell;
    this.cardCalendar = cardCalendar;
    this.ivProduct = ivProduct;
    this.relativeDetails = relativeDetails;
    this.tvCategory = tvCategory;
    this.tvDate = tvDate;
    this.tvMonth = tvMonth;
    this.tvName = tvName;
    this.tvQuantity = tvQuantity;
    this.tvYear = tvYear;
  }

  public abstract void setInventory(@Nullable Inventory inventory);

  @Nullable
  public Inventory getInventory() {
    return mInventory;
  }

  public abstract void setIsOpen(@Nullable Boolean isOpen);

  @Nullable
  public Boolean getIsOpen() {
    return mIsOpen;
  }

  @NonNull
  public static LayoutItemListTransactionBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup root, boolean attachToRoot) {
    return inflate(inflater, root, attachToRoot, DataBindingUtil.getDefaultComponent());
  }

  /**
   * This method receives DataBindingComponent instance as type Object instead of
   * type DataBindingComponent to avoid causing too many compilation errors if
   * compilation fails for another reason.
   * https://issuetracker.google.com/issues/116541301
   * @Deprecated Use DataBindingUtil.inflate(inflater, R.layout.layout_item_list_transaction, root, attachToRoot, component)
   */
  @NonNull
  @Deprecated
  public static LayoutItemListTransactionBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup root, boolean attachToRoot, @Nullable Object component) {
    return ViewDataBinding.<LayoutItemListTransactionBinding>inflateInternal(inflater, R.layout.layout_item_list_transaction, root, attachToRoot, component);
  }

  @NonNull
  public static LayoutItemListTransactionBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, DataBindingUtil.getDefaultComponent());
  }

  /**
   * This method receives DataBindingComponent instance as type Object instead of
   * type DataBindingComponent to avoid causing too many compilation errors if
   * compilation fails for another reason.
   * https://issuetracker.google.com/issues/116541301
   * @Deprecated Use DataBindingUtil.inflate(inflater, R.layout.layout_item_list_transaction, null, false, component)
   */
  @NonNull
  @Deprecated
  public static LayoutItemListTransactionBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable Object component) {
    return ViewDataBinding.<LayoutItemListTransactionBinding>inflateInternal(inflater, R.layout.layout_item_list_transaction, null, false, component);
  }

  public static LayoutItemListTransactionBinding bind(@NonNull View view) {
    return bind(view, DataBindingUtil.getDefaultComponent());
  }

  /**
   * This method receives DataBindingComponent instance as type Object instead of
   * type DataBindingComponent to avoid causing too many compilation errors if
   * compilation fails for another reason.
   * https://issuetracker.google.com/issues/116541301
   * @Deprecated Use DataBindingUtil.bind(view, component)
   */
  @Deprecated
  public static LayoutItemListTransactionBinding bind(@NonNull View view,
      @Nullable Object component) {
    return (LayoutItemListTransactionBinding)bind(component, view, R.layout.layout_item_list_transaction);
  }
}
