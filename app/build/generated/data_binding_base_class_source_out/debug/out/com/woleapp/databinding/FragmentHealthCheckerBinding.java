// Generated by data binding compiler. Do not edit!
package com.woleapp.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.ImageView;
import android.widget.ProgressBar;
import android.widget.RadioButton;
import android.widget.RadioGroup;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.databinding.Bindable;
import androidx.databinding.DataBindingUtil;
import androidx.databinding.ViewDataBinding;
import com.google.android.material.textfield.TextInputEditText;
import com.google.android.material.textfield.TextInputLayout;
import com.woleapp.R;
import com.woleapp.viewmodels.HealthCheckerViewModel;
import java.lang.Deprecated;
import java.lang.Object;

public abstract class FragmentHealthCheckerBinding extends ViewDataBinding {
  @NonNull
  public final TextView communicationMethodHeader;

  @NonNull
  public final TextView communicationMethodNote;

  @NonNull
  public final RadioGroup communicationOption;

  @NonNull
  public final TextView customerDetailsCaseNote;

  @NonNull
  public final TextView customersDetails;

  @NonNull
  public final TextInputLayout dateofbirth;

  @NonNull
  public final TextInputEditText dob;

  @NonNull
  public final RadioButton female;

  @NonNull
  public final TextInputLayout firstname;

  @NonNull
  public final RadioButton followUpCase;

  @NonNull
  public final TextInputLayout followUpCode;

  @NonNull
  public final TextView genderHeader;

  @NonNull
  public final RadioGroup genderOption;

  @NonNull
  public final View headerLine;

  @NonNull
  public final ImageView healthCheckerHeader;

  @NonNull
  public final TextInputLayout lastname;

  @NonNull
  public final RadioButton male;

  @NonNull
  public final RadioButton newCase;

  @NonNull
  public final RadioGroup newOrFollowUpOption;

  @NonNull
  public final TextView note;

  @NonNull
  public final View noteLine;

  @NonNull
  public final RadioButton phoneCall;

  @NonNull
  public final ProgressBar progress;

  @NonNull
  public final RadioButton sms;

  @NonNull
  public final Button submitButton;

  @NonNull
  public final TextInputLayout telephone;

  @NonNull
  public final TextView typeOfCaseHeader;

  @NonNull
  public final TextView typeOfCaseNote;

  @Bindable
  protected HealthCheckerViewModel mViewModel;

  protected FragmentHealthCheckerBinding(Object _bindingComponent, View _root, int _localFieldCount,
      TextView communicationMethodHeader, TextView communicationMethodNote,
      RadioGroup communicationOption, TextView customerDetailsCaseNote, TextView customersDetails,
      TextInputLayout dateofbirth, TextInputEditText dob, RadioButton female,
      TextInputLayout firstname, RadioButton followUpCase, TextInputLayout followUpCode,
      TextView genderHeader, RadioGroup genderOption, View headerLine,
      ImageView healthCheckerHeader, TextInputLayout lastname, RadioButton male,
      RadioButton newCase, RadioGroup newOrFollowUpOption, TextView note, View noteLine,
      RadioButton phoneCall, ProgressBar progress, RadioButton sms, Button submitButton,
      TextInputLayout telephone, TextView typeOfCaseHeader, TextView typeOfCaseNote) {
    super(_bindingComponent, _root, _localFieldCount);
    this.communicationMethodHeader = communicationMethodHeader;
    this.communicationMethodNote = communicationMethodNote;
    this.communicationOption = communicationOption;
    this.customerDetailsCaseNote = customerDetailsCaseNote;
    this.customersDetails = customersDetails;
    this.dateofbirth = dateofbirth;
    this.dob = dob;
    this.female = female;
    this.firstname = firstname;
    this.followUpCase = followUpCase;
    this.followUpCode = followUpCode;
    this.genderHeader = genderHeader;
    this.genderOption = genderOption;
    this.headerLine = headerLine;
    this.healthCheckerHeader = healthCheckerHeader;
    this.lastname = lastname;
    this.male = male;
    this.newCase = newCase;
    this.newOrFollowUpOption = newOrFollowUpOption;
    this.note = note;
    this.noteLine = noteLine;
    this.phoneCall = phoneCall;
    this.progress = progress;
    this.sms = sms;
    this.submitButton = submitButton;
    this.telephone = telephone;
    this.typeOfCaseHeader = typeOfCaseHeader;
    this.typeOfCaseNote = typeOfCaseNote;
  }

  public abstract void setViewModel(@Nullable HealthCheckerViewModel viewModel);

  @Nullable
  public HealthCheckerViewModel getViewModel() {
    return mViewModel;
  }

  @NonNull
  public static FragmentHealthCheckerBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup root, boolean attachToRoot) {
    return inflate(inflater, root, attachToRoot, DataBindingUtil.getDefaultComponent());
  }

  /**
   * This method receives DataBindingComponent instance as type Object instead of
   * type DataBindingComponent to avoid causing too many compilation errors if
   * compilation fails for another reason.
   * https://issuetracker.google.com/issues/116541301
   * @Deprecated Use DataBindingUtil.inflate(inflater, R.layout.fragment_health_checker, root, attachToRoot, component)
   */
  @NonNull
  @Deprecated
  public static FragmentHealthCheckerBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup root, boolean attachToRoot, @Nullable Object component) {
    return ViewDataBinding.<FragmentHealthCheckerBinding>inflateInternal(inflater, R.layout.fragment_health_checker, root, attachToRoot, component);
  }

  @NonNull
  public static FragmentHealthCheckerBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, DataBindingUtil.getDefaultComponent());
  }

  /**
   * This method receives DataBindingComponent instance as type Object instead of
   * type DataBindingComponent to avoid causing too many compilation errors if
   * compilation fails for another reason.
   * https://issuetracker.google.com/issues/116541301
   * @Deprecated Use DataBindingUtil.inflate(inflater, R.layout.fragment_health_checker, null, false, component)
   */
  @NonNull
  @Deprecated
  public static FragmentHealthCheckerBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable Object component) {
    return ViewDataBinding.<FragmentHealthCheckerBinding>inflateInternal(inflater, R.layout.fragment_health_checker, null, false, component);
  }

  public static FragmentHealthCheckerBinding bind(@NonNull View view) {
    return bind(view, DataBindingUtil.getDefaultComponent());
  }

  /**
   * This method receives DataBindingComponent instance as type Object instead of
   * type DataBindingComponent to avoid causing too many compilation errors if
   * compilation fails for another reason.
   * https://issuetracker.google.com/issues/116541301
   * @Deprecated Use DataBindingUtil.bind(view, component)
   */
  @Deprecated
  public static FragmentHealthCheckerBinding bind(@NonNull View view, @Nullable Object component) {
    return (FragmentHealthCheckerBinding)bind(component, view, R.layout.fragment_health_checker);
  }
}
